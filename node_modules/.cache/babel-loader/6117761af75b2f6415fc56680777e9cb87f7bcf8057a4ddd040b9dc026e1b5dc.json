{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TrezorConnectDynamicImpl = void 0;\nconst tslib_1 = require(\"tslib\");\nconst factory_1 = require(\"@trezor/connect/lib/factory\");\nconst core_in_iframe_1 = require(\"./impl/core-in-iframe\");\nconst core_in_popup_1 = require(\"./impl/core-in-popup\");\nclass ProxyEventEmitter {\n  constructor(eventEmitters) {\n    this.eventEmitters = eventEmitters;\n  }\n  emit(eventName, ...args) {\n    this.eventEmitters.forEach(emitter => emitter.emit(eventName, ...args));\n    return true;\n  }\n  on(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.on(eventName, listener));\n    return this;\n  }\n  off(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.off(eventName, listener));\n    return this;\n  }\n  once(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.once(eventName, listener));\n    return this;\n  }\n  addListener(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.addListener(eventName, listener));\n    return this;\n  }\n  prependListener(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.prependListener(eventName, listener));\n    return this;\n  }\n  prependOnceListener(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.prependOnceListener(eventName, listener));\n    return this;\n  }\n  removeAllListeners(event) {\n    this.eventEmitters.forEach(emitter => emitter.removeAllListeners(event));\n    return this;\n  }\n  removeListener(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.removeListener(eventName, listener));\n    return this;\n  }\n  setMaxListeners(n) {\n    this.eventEmitters.forEach(emitter => emitter.setMaxListeners(n));\n    return this;\n  }\n  eventNames() {\n    return this.eventEmitters[0].eventNames();\n  }\n  getMaxListeners() {\n    return this.eventEmitters[0].getMaxListeners();\n  }\n  listenerCount(eventName, listener) {\n    return this.eventEmitters[0].listenerCount(eventName, listener);\n  }\n  rawListeners(eventName) {\n    return this.eventEmitters[0].rawListeners(eventName);\n  }\n  listeners(eventName) {\n    return this.eventEmitters[0].listeners(eventName);\n  }\n}\nclass TrezorConnectDynamicImpl {\n  constructor() {\n    this.currentTarget = 'iframe';\n    this.coreInIframeImpl = new core_in_iframe_1.CoreInIframe();\n    this.coreInPopupImpl = new core_in_popup_1.CoreInPopup();\n    this.eventEmitter = new ProxyEventEmitter([this.coreInIframeImpl.eventEmitter, this.coreInPopupImpl.eventEmitter]);\n  }\n  getTarget() {\n    return this.currentTarget === 'iframe' ? this.coreInIframeImpl : this.coreInPopupImpl;\n  }\n  manifest(data) {\n    this.getTarget().manifest(data);\n  }\n  init(settings = {}) {\n    if (settings.useCoreInPopup) {\n      this.currentTarget = 'core-in-popup';\n    } else {\n      this.currentTarget = 'iframe';\n    }\n    return this.getTarget().init(settings);\n  }\n  call(params) {\n    return this.getTarget().call(params);\n  }\n  requestLogin(params) {\n    return this.getTarget().requestLogin(params);\n  }\n  uiResponse(params) {\n    return this.getTarget().uiResponse(params);\n  }\n  renderWebUSBButton() {\n    return this.getTarget().renderWebUSBButton();\n  }\n  disableWebUSB() {\n    return this.getTarget().disableWebUSB();\n  }\n  requestWebUSBDevice() {\n    return this.getTarget().requestWebUSBDevice();\n  }\n  cancel(error) {\n    return this.getTarget().cancel(error);\n  }\n  dispose() {\n    this.eventEmitter.removeAllListeners();\n    return this.getTarget().dispose();\n  }\n}\nexports.TrezorConnectDynamicImpl = TrezorConnectDynamicImpl;\nconst methods = new TrezorConnectDynamicImpl();\nconst TrezorConnect = (0, factory_1.factory)({\n  eventEmitter: methods.eventEmitter,\n  init: methods.init.bind(methods),\n  call: methods.call.bind(methods),\n  manifest: methods.manifest.bind(methods),\n  requestLogin: methods.requestLogin.bind(methods),\n  uiResponse: methods.uiResponse.bind(methods),\n  renderWebUSBButton: methods.renderWebUSBButton.bind(methods),\n  disableWebUSB: methods.disableWebUSB.bind(methods),\n  requestWebUSBDevice: methods.requestWebUSBDevice.bind(methods),\n  cancel: methods.cancel.bind(methods),\n  dispose: methods.dispose.bind(methods)\n});\nexports.default = TrezorConnect;\ntslib_1.__exportStar(require(\"@trezor/connect/lib/exports\"), exports);","map":{"version":3,"names":["Object","defineProperty","exports","value","TrezorConnectDynamicImpl","tslib_1","require","factory_1","core_in_iframe_1","core_in_popup_1","ProxyEventEmitter","constructor","eventEmitters","emit","eventName","args","forEach","emitter","on","listener","off","once","addListener","prependListener","prependOnceListener","removeAllListeners","event","removeListener","setMaxListeners","n","eventNames","getMaxListeners","listenerCount","rawListeners","listeners","currentTarget","coreInIframeImpl","CoreInIframe","coreInPopupImpl","CoreInPopup","eventEmitter","getTarget","manifest","data","init","settings","useCoreInPopup","call","params","requestLogin","uiResponse","renderWebUSBButton","disableWebUSB","requestWebUSBDevice","cancel","error","dispose","methods","TrezorConnect","factory","bind","default","__exportStar"],"sources":["/Users/boraoz/Desktop/nft-marketplace/node_modules/@trezor/connect-web/lib/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrezorConnectDynamicImpl = void 0;\nconst tslib_1 = require(\"tslib\");\nconst factory_1 = require(\"@trezor/connect/lib/factory\");\nconst core_in_iframe_1 = require(\"./impl/core-in-iframe\");\nconst core_in_popup_1 = require(\"./impl/core-in-popup\");\nclass ProxyEventEmitter {\n    constructor(eventEmitters) {\n        this.eventEmitters = eventEmitters;\n    }\n    emit(eventName, ...args) {\n        this.eventEmitters.forEach(emitter => emitter.emit(eventName, ...args));\n        return true;\n    }\n    on(eventName, listener) {\n        this.eventEmitters.forEach(emitter => emitter.on(eventName, listener));\n        return this;\n    }\n    off(eventName, listener) {\n        this.eventEmitters.forEach(emitter => emitter.off(eventName, listener));\n        return this;\n    }\n    once(eventName, listener) {\n        this.eventEmitters.forEach(emitter => emitter.once(eventName, listener));\n        return this;\n    }\n    addListener(eventName, listener) {\n        this.eventEmitters.forEach(emitter => emitter.addListener(eventName, listener));\n        return this;\n    }\n    prependListener(eventName, listener) {\n        this.eventEmitters.forEach(emitter => emitter.prependListener(eventName, listener));\n        return this;\n    }\n    prependOnceListener(eventName, listener) {\n        this.eventEmitters.forEach(emitter => emitter.prependOnceListener(eventName, listener));\n        return this;\n    }\n    removeAllListeners(event) {\n        this.eventEmitters.forEach(emitter => emitter.removeAllListeners(event));\n        return this;\n    }\n    removeListener(eventName, listener) {\n        this.eventEmitters.forEach(emitter => emitter.removeListener(eventName, listener));\n        return this;\n    }\n    setMaxListeners(n) {\n        this.eventEmitters.forEach(emitter => emitter.setMaxListeners(n));\n        return this;\n    }\n    eventNames() {\n        return this.eventEmitters[0].eventNames();\n    }\n    getMaxListeners() {\n        return this.eventEmitters[0].getMaxListeners();\n    }\n    listenerCount(eventName, listener) {\n        return this.eventEmitters[0].listenerCount(eventName, listener);\n    }\n    rawListeners(eventName) {\n        return this.eventEmitters[0].rawListeners(eventName);\n    }\n    listeners(eventName) {\n        return this.eventEmitters[0].listeners(eventName);\n    }\n}\nclass TrezorConnectDynamicImpl {\n    constructor() {\n        this.currentTarget = 'iframe';\n        this.coreInIframeImpl = new core_in_iframe_1.CoreInIframe();\n        this.coreInPopupImpl = new core_in_popup_1.CoreInPopup();\n        this.eventEmitter = new ProxyEventEmitter([\n            this.coreInIframeImpl.eventEmitter,\n            this.coreInPopupImpl.eventEmitter,\n        ]);\n    }\n    getTarget() {\n        return this.currentTarget === 'iframe' ? this.coreInIframeImpl : this.coreInPopupImpl;\n    }\n    manifest(data) {\n        this.getTarget().manifest(data);\n    }\n    init(settings = {}) {\n        if (settings.useCoreInPopup) {\n            this.currentTarget = 'core-in-popup';\n        }\n        else {\n            this.currentTarget = 'iframe';\n        }\n        return this.getTarget().init(settings);\n    }\n    call(params) {\n        return this.getTarget().call(params);\n    }\n    requestLogin(params) {\n        return this.getTarget().requestLogin(params);\n    }\n    uiResponse(params) {\n        return this.getTarget().uiResponse(params);\n    }\n    renderWebUSBButton() {\n        return this.getTarget().renderWebUSBButton();\n    }\n    disableWebUSB() {\n        return this.getTarget().disableWebUSB();\n    }\n    requestWebUSBDevice() {\n        return this.getTarget().requestWebUSBDevice();\n    }\n    cancel(error) {\n        return this.getTarget().cancel(error);\n    }\n    dispose() {\n        this.eventEmitter.removeAllListeners();\n        return this.getTarget().dispose();\n    }\n}\nexports.TrezorConnectDynamicImpl = TrezorConnectDynamicImpl;\nconst methods = new TrezorConnectDynamicImpl();\nconst TrezorConnect = (0, factory_1.factory)({\n    eventEmitter: methods.eventEmitter,\n    init: methods.init.bind(methods),\n    call: methods.call.bind(methods),\n    manifest: methods.manifest.bind(methods),\n    requestLogin: methods.requestLogin.bind(methods),\n    uiResponse: methods.uiResponse.bind(methods),\n    renderWebUSBButton: methods.renderWebUSBButton.bind(methods),\n    disableWebUSB: methods.disableWebUSB.bind(methods),\n    requestWebUSBDevice: methods.requestWebUSBDevice.bind(methods),\n    cancel: methods.cancel.bind(methods),\n    dispose: methods.dispose.bind(methods),\n});\nexports.default = TrezorConnect;\ntslib_1.__exportStar(require(\"@trezor/connect/lib/exports\"), exports);\n//# sourceMappingURL=index.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}