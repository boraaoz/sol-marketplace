{"ast":null,"code":"var _jsxFileName = \"/Users/boraoz/Desktop/nft-marketplace/src/components/NFTCard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useWallet, useConnection } from '@solana/wallet-adapter-react';\nimport { PublicKey, Transaction, SystemProgram } from '@solana/web3.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NFTCard = ({\n  nft\n}) => {\n  _s();\n  const {\n    connection\n  } = useConnection();\n  const {\n    publicKey,\n    sendTransaction\n  } = useWallet();\n  const handleBuy = async () => {\n    if (!publicKey) {\n      alert('Lütfen cüzdanınızı bağlayın!');\n      return;\n    }\n    const transaction = new Transaction().add(SystemProgram.transfer({\n      fromPubkey: publicKey,\n      toPubkey: new PublicKey(nft.owner),\n      lamports: nft.price * 1000000000 // 1 SOL = 1,000,000,000 Lamports\n    }));\n    try {\n      const signature = await sendTransaction(transaction, connection);\n      await connection.confirmTransaction(signature, 'processed');\n      alert('NFT başarıyla satın alındı!');\n    } catch (error) {\n      console.error('İşlem hatası:', error);\n      alert('Satın alma işlemi başarısız oldu.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border p-4 rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: nft.image,\n      alt: nft.name,\n      className: \"w-full h-64 object-cover rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold\",\n        children: nft.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: nft.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 mt-2\",\n        children: [nft.price, \" SOL\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white px-4 py-2 rounded mt-4\",\n        onClick: handleBuy,\n        children: \"Sat\\u0131n Al\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(NFTCard, \"nuT7ctT3oQyaLcmcqayfsnFPiOI=\", false, function () {\n  return [useConnection, useWallet];\n});\n_c = NFTCard;\nexport default NFTCard;\nvar _c;\n$RefreshReg$(_c, \"NFTCard\");","map":{"version":3,"names":["React","useWallet","useConnection","PublicKey","Transaction","SystemProgram","jsxDEV","_jsxDEV","NFTCard","nft","_s","connection","publicKey","sendTransaction","handleBuy","alert","transaction","add","transfer","fromPubkey","toPubkey","owner","lamports","price","signature","confirmTransaction","error","console","className","children","src","image","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","description","onClick","_c","$RefreshReg$"],"sources":["/Users/boraoz/Desktop/nft-marketplace/src/components/NFTCard.js"],"sourcesContent":["import React from 'react';\nimport { useWallet, useConnection } from '@solana/wallet-adapter-react';\nimport { PublicKey, Transaction, SystemProgram } from '@solana/web3.js';\n\nconst NFTCard = ({ nft }) => {\n  const { connection } = useConnection();\n  const { publicKey, sendTransaction } = useWallet();\n\n  const handleBuy = async () => {\n    if (!publicKey) {\n      alert('Lütfen cüzdanınızı bağlayın!');\n      return;\n    }\n\n    const transaction = new Transaction().add(\n      SystemProgram.transfer({\n        fromPubkey: publicKey,\n        toPubkey: new PublicKey(nft.owner),\n        lamports: nft.price * 1000000000, // 1 SOL = 1,000,000,000 Lamports\n      })\n    );\n\n    try {\n      const signature = await sendTransaction(transaction, connection);\n      await connection.confirmTransaction(signature, 'processed');\n      alert('NFT başarıyla satın alındı!');\n    } catch (error) {\n      console.error('İşlem hatası:', error);\n      alert('Satın alma işlemi başarısız oldu.');\n    }\n  };\n\n  return (\n    <div className=\"border p-4 rounded-lg shadow-lg\">\n      <img src={nft.image} alt={nft.name} className=\"w-full h-64 object-cover rounded\" />\n      <div className=\"mt-4\">\n        <h2 className=\"text-xl font-bold\">{nft.name}</h2>\n        <p className=\"text-gray-600\">{nft.description}</p>\n        <p className=\"text-green-500 mt-2\">{nft.price} SOL</p>\n        <button\n          className=\"bg-blue-500 text-white px-4 py-2 rounded mt-4\"\n          onClick={handleBuy}\n        >\n          Satın Al\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default NFTCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}