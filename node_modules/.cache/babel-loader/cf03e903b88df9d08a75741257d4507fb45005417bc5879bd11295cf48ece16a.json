{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scheduleAction = void 0;\nconst tslib_1 = require(\"tslib\");\nconst isArray = attempts => Array.isArray(attempts);\nconst abortedBySignal = () => new Error('Aborted by signal');\nconst abortedByDeadline = () => new Error('Aborted by deadline');\nconst abortedByTimeout = () => new Error('Aborted by timeout');\nconst resolveAfterMs = (ms, clear) => new Promise((resolve, reject) => {\n  if (clear.aborted) return reject();\n  if (ms === undefined) return resolve();\n  const timeout = setTimeout(resolve, ms);\n  const onClear = () => {\n    clearTimeout(timeout);\n    clear.removeEventListener('abort', onClear);\n    reject();\n  };\n  clear.addEventListener('abort', onClear);\n});\nconst rejectAfterMs = (ms, reason, clear) => new Promise((_, reject) => {\n  if (clear.aborted) return reject();\n  const timeout = ms !== undefined ? setTimeout(() => reject(reason()), ms) : undefined;\n  const onClear = () => {\n    clearTimeout(timeout);\n    clear.removeEventListener('abort', onClear);\n    reject();\n  };\n  clear.addEventListener('abort', onClear);\n});\nconst rejectWhenAborted = (signal, clear) => new Promise((_, reject) => {\n  if (clear.aborted) return reject();\n  if (signal === null || signal === void 0 ? void 0 : signal.aborted) return reject(abortedBySignal());\n  const onAbort = () => reject(abortedBySignal());\n  signal === null || signal === void 0 ? void 0 : signal.addEventListener('abort', onAbort);\n  const onClear = () => {\n    signal === null || signal === void 0 ? void 0 : signal.removeEventListener('abort', onAbort);\n    clear.removeEventListener('abort', onClear);\n    reject();\n  };\n  clear.addEventListener('abort', onClear);\n});\nconst resolveAction = (action, clear) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n  const aborter = new AbortController();\n  const onClear = () => aborter.abort();\n  if (clear.aborted) onClear();\n  clear.addEventListener('abort', onClear);\n  try {\n    return yield new Promise(resolve => resolve(action(aborter.signal)));\n  } finally {\n    clear.removeEventListener('abort', onClear);\n  }\n});\nconst attemptLoop = (attempts, attempt, failure, clear) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n  for (let a = 0; a < attempts - 1; a++) {\n    if (clear.aborted) break;\n    const aborter = new AbortController();\n    const onClear = () => aborter.abort();\n    clear.addEventListener('abort', onClear);\n    try {\n      return yield attempt(a, aborter.signal);\n    } catch (_a) {\n      onClear();\n      yield failure(a);\n    } finally {\n      clear.removeEventListener('abort', onClear);\n    }\n  }\n  return clear.aborted ? Promise.reject() : attempt(attempts - 1, clear);\n});\nconst scheduleAction = (action, params) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n  const {\n    signal,\n    delay,\n    attempts,\n    timeout,\n    deadline,\n    gap\n  } = params;\n  const deadlineMs = deadline && deadline - Date.now();\n  const attemptCount = isArray(attempts) ? attempts.length : attempts !== null && attempts !== void 0 ? attempts : deadline ? Infinity : 1;\n  const clearAborter = new AbortController();\n  const clear = clearAborter.signal;\n  const getParams = isArray(attempts) ? attempt => attempts[attempt] : () => ({\n    timeout,\n    gap\n  });\n  try {\n    return yield Promise.race([rejectWhenAborted(signal, clear), rejectAfterMs(deadlineMs, abortedByDeadline, clear), resolveAfterMs(delay, clear).then(() => attemptLoop(attemptCount, (attempt, abort) => Promise.race([rejectAfterMs(getParams(attempt).timeout, abortedByTimeout, clear), resolveAction(action, abort)]), attempt => {\n      var _a;\n      return resolveAfterMs((_a = getParams(attempt).gap) !== null && _a !== void 0 ? _a : 0, clear);\n    }, clear))]);\n  } finally {\n    clearAborter.abort();\n  }\n});\nexports.scheduleAction = scheduleAction;","map":{"version":3,"names":["Object","defineProperty","exports","value","scheduleAction","tslib_1","require","isArray","attempts","Array","abortedBySignal","Error","abortedByDeadline","abortedByTimeout","resolveAfterMs","ms","clear","Promise","resolve","reject","aborted","undefined","timeout","setTimeout","onClear","clearTimeout","removeEventListener","addEventListener","rejectAfterMs","reason","_","rejectWhenAborted","signal","onAbort","resolveAction","action","__awaiter","aborter","AbortController","abort","attemptLoop","attempt","failure","a","_a","params","delay","deadline","gap","deadlineMs","Date","now","attemptCount","length","Infinity","clearAborter","getParams","race","then"],"sources":["/Users/boraoz/Desktop/nft-marketplace/node_modules/@trezor/utils/lib/scheduleAction.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scheduleAction = void 0;\nconst tslib_1 = require(\"tslib\");\nconst isArray = (attempts) => Array.isArray(attempts);\nconst abortedBySignal = () => new Error('Aborted by signal');\nconst abortedByDeadline = () => new Error('Aborted by deadline');\nconst abortedByTimeout = () => new Error('Aborted by timeout');\nconst resolveAfterMs = (ms, clear) => new Promise((resolve, reject) => {\n    if (clear.aborted)\n        return reject();\n    if (ms === undefined)\n        return resolve();\n    const timeout = setTimeout(resolve, ms);\n    const onClear = () => {\n        clearTimeout(timeout);\n        clear.removeEventListener('abort', onClear);\n        reject();\n    };\n    clear.addEventListener('abort', onClear);\n});\nconst rejectAfterMs = (ms, reason, clear) => new Promise((_, reject) => {\n    if (clear.aborted)\n        return reject();\n    const timeout = ms !== undefined ? setTimeout(() => reject(reason()), ms) : undefined;\n    const onClear = () => {\n        clearTimeout(timeout);\n        clear.removeEventListener('abort', onClear);\n        reject();\n    };\n    clear.addEventListener('abort', onClear);\n});\nconst rejectWhenAborted = (signal, clear) => new Promise((_, reject) => {\n    if (clear.aborted)\n        return reject();\n    if (signal === null || signal === void 0 ? void 0 : signal.aborted)\n        return reject(abortedBySignal());\n    const onAbort = () => reject(abortedBySignal());\n    signal === null || signal === void 0 ? void 0 : signal.addEventListener('abort', onAbort);\n    const onClear = () => {\n        signal === null || signal === void 0 ? void 0 : signal.removeEventListener('abort', onAbort);\n        clear.removeEventListener('abort', onClear);\n        reject();\n    };\n    clear.addEventListener('abort', onClear);\n});\nconst resolveAction = (action, clear) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n    const aborter = new AbortController();\n    const onClear = () => aborter.abort();\n    if (clear.aborted)\n        onClear();\n    clear.addEventListener('abort', onClear);\n    try {\n        return yield new Promise(resolve => resolve(action(aborter.signal)));\n    }\n    finally {\n        clear.removeEventListener('abort', onClear);\n    }\n});\nconst attemptLoop = (attempts, attempt, failure, clear) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n    for (let a = 0; a < attempts - 1; a++) {\n        if (clear.aborted)\n            break;\n        const aborter = new AbortController();\n        const onClear = () => aborter.abort();\n        clear.addEventListener('abort', onClear);\n        try {\n            return yield attempt(a, aborter.signal);\n        }\n        catch (_a) {\n            onClear();\n            yield failure(a);\n        }\n        finally {\n            clear.removeEventListener('abort', onClear);\n        }\n    }\n    return clear.aborted ? Promise.reject() : attempt(attempts - 1, clear);\n});\nconst scheduleAction = (action, params) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n    const { signal, delay, attempts, timeout, deadline, gap } = params;\n    const deadlineMs = deadline && deadline - Date.now();\n    const attemptCount = isArray(attempts)\n        ? attempts.length\n        : attempts !== null && attempts !== void 0 ? attempts : (deadline ? Infinity : 1);\n    const clearAborter = new AbortController();\n    const clear = clearAborter.signal;\n    const getParams = isArray(attempts)\n        ? (attempt) => attempts[attempt]\n        : () => ({ timeout, gap });\n    try {\n        return yield Promise.race([\n            rejectWhenAborted(signal, clear),\n            rejectAfterMs(deadlineMs, abortedByDeadline, clear),\n            resolveAfterMs(delay, clear).then(() => attemptLoop(attemptCount, (attempt, abort) => Promise.race([\n                rejectAfterMs(getParams(attempt).timeout, abortedByTimeout, clear),\n                resolveAction(action, abort),\n            ]), attempt => { var _a; return resolveAfterMs((_a = getParams(attempt).gap) !== null && _a !== void 0 ? _a : 0, clear); }, clear)),\n        ]);\n    }\n    finally {\n        clearAborter.abort();\n    }\n});\nexports.scheduleAction = scheduleAction;\n//# sourceMappingURL=scheduleAction.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}